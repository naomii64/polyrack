#pragma once
#define FS_GLSL "#version 330 core\n            \nin vec4 vColour;\nin vec2 vTexCoord;    \nin vec4 vWorldNormal;\n\n//uniforms\nuniform vec4 uTextureRects[64];\nuniform sampler2D myTexture;\nuniform int uTextureID;\n            \nuniform vec4 uTintColor=vec4(1.0,1.0,1.0,1.0);\n            \nlayout(location = 0) out vec4 FragColor;\n\nvec2 cropUVSToTexture(vec2 inputUV, int textureID)\n{\n    vec4 rect = uTextureRects[textureID]; // x, y, width, height\n    vec2 wrappedUV = fract(inputUV);      // ensures 0.0 â‰¤ UV < 1.0\n    return rect.xy + wrappedUV * rect.zw;\n}\n\nvoid main()\n{\n    vec4 mappedNormal = (vWorldNormal+vec4(1.0))/vec4(2.0);\n                \n    //final colors that do get combined\n    vec4 texColor = texture(myTexture,  cropUVSToTexture(vTexCoord,uTextureID));\n    vec4 shadowColor = vec4(0.0);\n    shadowColor+=mappedNormal.y*3.0;\n    shadowColor+=mappedNormal.x;\n    shadowColor+=mappedNormal.z*2.0;\n    shadowColor/=4.0;\n    shadowColor*=shadowColor;\n\n    shadowColor.a=1.0;\n    FragColor = shadowColor*texColor*uTintColor;\n\n    //FragColor=round(FragColor*8.0)/8.0;\n}"
#define VS_GLSL "#version 330 core\n\nlayout(location = 0) in vec4 aPosition; \nlayout(location = 1) in vec4 aNormal;\nlayout(location = 2) in vec4 aColor;     \nlayout(location = 3) in vec2 aTexCoord;\n\nlayout(location = 4) in uint aGroupID;\n\n//matrices for the different parts\n//0th matrix will always be identity\nuniform mat4 uMatrices[17]=mat4[17](\n    //0\n    mat4(1.0),\n    //1-17\n    mat4(1.0),mat4(1.0),mat4(1.0),mat4(1.0),\n    mat4(1.0),mat4(1.0),mat4(1.0),mat4(1.0),\n    mat4(1.0),mat4(1.0),mat4(1.0),mat4(1.0),\n    mat4(1.0),mat4(1.0),mat4(1.0),mat4(1.0)\n);\n\n\n//matrices for the single model\nuniform mat4 uProjectionMatrix;       \nuniform mat4 uModelMatrix;    \nuniform mat4 uModelNormal;            \nuniform mat4 uViewMatrix;\n\nuniform mat3 uTexCoordMatrix=mat3(\n    1.0,0.0,0.0,\n    0.0,1.0,0.0,\n    0.0,0.0,1.0\n);\n\nout vec4 vColour;\nout vec4 vWorldNormal;\nout vec2 vTexCoord;            \n            \nvoid main()\n{\n    mat4 groupMatrix = uMatrices[aGroupID];\n\n    gl_Position = uProjectionMatrix*uViewMatrix*uModelMatrix*groupMatrix*aPosition; \n\n    vWorldNormal = aNormal*uModelNormal;\n    vColour = aColor;\n    vTexCoord = vec2(uTexCoordMatrix*vec3(aTexCoord.xy,1.0)).xy;\n\n    //gl_Position=round(gl_Position*32.0)/32.0;\n}"
